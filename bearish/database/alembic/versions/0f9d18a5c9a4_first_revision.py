"""first revision

Revision ID: 0f9d18a5c9a4
Revises: 
Create Date: 2024-11-11 06:19:23.474330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '0f9d18a5c9a4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_ohlcv',
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('date', 'symbol')
    )
    with op.batch_alter_table('daily_ohlcv', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_ohlcv_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_daily_ohlcv_symbol'), ['symbol'], unique=False)

    op.create_table('equity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sector', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('industry_group', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('industry', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('exchange', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('market', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zipcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('market_cap', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('isin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cusip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('figi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('composite_figi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shareclass_figi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('equity', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_equity_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_equity_symbol'), ['symbol'], unique=False)

    op.create_table('financials',
    sa.Column('accounts_payable', sa.Float(), nullable=True),
    sa.Column('accounts_receivable', sa.Float(), nullable=True),
    sa.Column('accumulated_depreciation', sa.Float(), nullable=True),
    sa.Column('available_for_sale_securities', sa.Float(), nullable=True),
    sa.Column('basic_average_shares', sa.Float(), nullable=True),
    sa.Column('basic_eps', sa.Float(), nullable=True),
    sa.Column('beginning_cash_position', sa.Float(), nullable=True),
    sa.Column('capital_expenditure', sa.Float(), nullable=True),
    sa.Column('capital_lease_obligations', sa.Float(), nullable=True),
    sa.Column('capital_stock', sa.Float(), nullable=True),
    sa.Column('cash_and_cash_equivalents', sa.Float(), nullable=True),
    sa.Column('cash_cash_equivalents_and_short_term_investments', sa.Float(), nullable=True),
    sa.Column('cash_dividends_paid', sa.Float(), nullable=True),
    sa.Column('cash_equivalents', sa.Float(), nullable=True),
    sa.Column('cash_financial', sa.Float(), nullable=True),
    sa.Column('cash_flow_from_continuing_financing_activities', sa.Float(), nullable=True),
    sa.Column('cash_flow_from_continuing_investing_activities', sa.Float(), nullable=True),
    sa.Column('cash_flow_from_continuing_operating_activities', sa.Float(), nullable=True),
    sa.Column('change_in_account_payable', sa.Float(), nullable=True),
    sa.Column('change_in_inventory', sa.Float(), nullable=True),
    sa.Column('change_in_other_current_assets', sa.Float(), nullable=True),
    sa.Column('change_in_other_current_liabilities', sa.Float(), nullable=True),
    sa.Column('change_in_other_working_capital', sa.Float(), nullable=True),
    sa.Column('change_in_payable', sa.Float(), nullable=True),
    sa.Column('change_in_payables_and_accrued_expense', sa.Float(), nullable=True),
    sa.Column('change_in_receivables', sa.Float(), nullable=True),
    sa.Column('change_in_working_capital', sa.Float(), nullable=True),
    sa.Column('changes_in_account_receivables', sa.Float(), nullable=True),
    sa.Column('changes_in_cash', sa.Float(), nullable=True),
    sa.Column('commercial_paper', sa.Float(), nullable=True),
    sa.Column('common_stock', sa.Float(), nullable=True),
    sa.Column('common_stock_dividend_paid', sa.Float(), nullable=True),
    sa.Column('common_stock_equity', sa.Float(), nullable=True),
    sa.Column('common_stock_issuance', sa.Float(), nullable=True),
    sa.Column('common_stock_payments', sa.Float(), nullable=True),
    sa.Column('cost_of_revenue', sa.Float(), nullable=True),
    sa.Column('current_assets', sa.Float(), nullable=True),
    sa.Column('current_capital_lease_obligation', sa.Float(), nullable=True),
    sa.Column('current_debt', sa.Float(), nullable=True),
    sa.Column('current_debt_and_capital_lease_obligation', sa.Float(), nullable=True),
    sa.Column('current_deferred_liabilities', sa.Float(), nullable=True),
    sa.Column('current_deferred_revenue', sa.Float(), nullable=True),
    sa.Column('current_liabilities', sa.Float(), nullable=True),
    sa.Column('deferred_income_tax', sa.Float(), nullable=True),
    sa.Column('deferred_tax', sa.Float(), nullable=True),
    sa.Column('depreciation_amortization_depletion', sa.Float(), nullable=True),
    sa.Column('depreciation_and_amortization', sa.Float(), nullable=True),
    sa.Column('diluted_average_shares', sa.Float(), nullable=True),
    sa.Column('diluted_eps', sa.Float(), nullable=True),
    sa.Column('diluted_ni_availto_com_stockholders', sa.Float(), nullable=True),
    sa.Column('ebit', sa.Float(), nullable=True),
    sa.Column('ebitda', sa.Float(), nullable=True),
    sa.Column('end_cash_position', sa.Float(), nullable=True),
    sa.Column('financing_cash_flow', sa.Float(), nullable=True),
    sa.Column('finished_goods', sa.Float(), nullable=True),
    sa.Column('free_cash_flow', sa.Float(), nullable=True),
    sa.Column('gains_losses_not_affecting_retained_earnings', sa.Float(), nullable=True),
    sa.Column('gross_ppe', sa.Float(), nullable=True),
    sa.Column('gross_profit', sa.Float(), nullable=True),
    sa.Column('income_tax_paid_supplemental_data', sa.Float(), nullable=True),
    sa.Column('income_tax_payable', sa.Float(), nullable=True),
    sa.Column('interest_expense', sa.Float(), nullable=True),
    sa.Column('interest_expense_non_operating', sa.Float(), nullable=True),
    sa.Column('interest_income', sa.Float(), nullable=True),
    sa.Column('interest_income_non_operating', sa.Float(), nullable=True),
    sa.Column('interest_paid_supplemental_data', sa.Float(), nullable=True),
    sa.Column('inventory', sa.Float(), nullable=True),
    sa.Column('invested_capital', sa.Float(), nullable=True),
    sa.Column('investing_cash_flow', sa.Float(), nullable=True),
    sa.Column('investmentin_financial_assets', sa.Float(), nullable=True),
    sa.Column('investments_and_advances', sa.Float(), nullable=True),
    sa.Column('issuance_of_capital_stock', sa.Float(), nullable=True),
    sa.Column('issuance_of_debt', sa.Float(), nullable=True),
    sa.Column('land_and_improvements', sa.Float(), nullable=True),
    sa.Column('leases', sa.Float(), nullable=True),
    sa.Column('long_term_capital_lease_obligation', sa.Float(), nullable=True),
    sa.Column('long_term_debt', sa.Float(), nullable=True),
    sa.Column('long_term_debt_and_capital_lease_obligation', sa.Float(), nullable=True),
    sa.Column('long_term_debt_issuance', sa.Float(), nullable=True),
    sa.Column('long_term_debt_payments', sa.Float(), nullable=True),
    sa.Column('machinery_furniture_equipment', sa.Float(), nullable=True),
    sa.Column('net_business_purchase_and_sale', sa.Float(), nullable=True),
    sa.Column('net_common_stock_issuance', sa.Float(), nullable=True),
    sa.Column('net_debt', sa.Float(), nullable=True),
    sa.Column('net_income', sa.Float(), nullable=True),
    sa.Column('net_income_common_stockholders', sa.Float(), nullable=True),
    sa.Column('net_income_continuous_operations', sa.Float(), nullable=True),
    sa.Column('net_income_from_continuing_and_discontinued_operation', sa.Float(), nullable=True),
    sa.Column('net_income_from_continuing_operation_net_minority_interest', sa.Float(), nullable=True),
    sa.Column('net_income_from_continuing_operations', sa.Float(), nullable=True),
    sa.Column('net_income_including_noncontrolling_interests', sa.Float(), nullable=True),
    sa.Column('net_interest_income', sa.Float(), nullable=True),
    sa.Column('net_investment_purchase_and_sale', sa.Float(), nullable=True),
    sa.Column('net_issuance_payments_of_debt', sa.Float(), nullable=True),
    sa.Column('net_long_term_debt_issuance', sa.Float(), nullable=True),
    sa.Column('net_non_operating_interest_income_expense', sa.Float(), nullable=True),
    sa.Column('net_other_financing_charges', sa.Float(), nullable=True),
    sa.Column('net_other_investing_changes', sa.Float(), nullable=True),
    sa.Column('net_ppe', sa.Float(), nullable=True),
    sa.Column('net_ppe_purchase_and_sale', sa.Float(), nullable=True),
    sa.Column('net_short_term_debt_issuance', sa.Float(), nullable=True),
    sa.Column('net_tangible_assets', sa.Float(), nullable=True),
    sa.Column('non_current_deferred_assets', sa.Float(), nullable=True),
    sa.Column('non_current_deferred_taxes_assets', sa.Float(), nullable=True),
    sa.Column('normalized_ebitda', sa.Float(), nullable=True),
    sa.Column('normalized_income', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow', sa.Float(), nullable=True),
    sa.Column('operating_expense', sa.Float(), nullable=True),
    sa.Column('operating_income', sa.Float(), nullable=True),
    sa.Column('operating_revenue', sa.Float(), nullable=True),
    sa.Column('ordinary_shares_number', sa.Float(), nullable=True),
    sa.Column('other_current_assets', sa.Float(), nullable=True),
    sa.Column('other_current_borrowings', sa.Float(), nullable=True),
    sa.Column('other_current_liabilities', sa.Float(), nullable=True),
    sa.Column('other_equity_adjustments', sa.Float(), nullable=True),
    sa.Column('other_income_expense', sa.Float(), nullable=True),
    sa.Column('other_investments', sa.Float(), nullable=True),
    sa.Column('other_non_cash_items', sa.Float(), nullable=True),
    sa.Column('other_non_current_assets', sa.Float(), nullable=True),
    sa.Column('other_non_current_liabilities', sa.Float(), nullable=True),
    sa.Column('other_non_operating_income_expenses', sa.Float(), nullable=True),
    sa.Column('other_properties', sa.Float(), nullable=True),
    sa.Column('other_receivables', sa.Float(), nullable=True),
    sa.Column('other_short_term_investments', sa.Float(), nullable=True),
    sa.Column('payables', sa.Float(), nullable=True),
    sa.Column('payables_and_accrued_expenses', sa.Float(), nullable=True),
    sa.Column('pretax_income', sa.Float(), nullable=True),
    sa.Column('properties', sa.Float(), nullable=True),
    sa.Column('purchase_of_business', sa.Float(), nullable=True),
    sa.Column('purchase_of_investment', sa.Float(), nullable=True),
    sa.Column('purchase_of_ppe', sa.Float(), nullable=True),
    sa.Column('raw_materials', sa.Float(), nullable=True),
    sa.Column('receivables', sa.Float(), nullable=True),
    sa.Column('reconciled_cost_of_revenue', sa.Float(), nullable=True),
    sa.Column('reconciled_depreciation', sa.Float(), nullable=True),
    sa.Column('repayment_of_debt', sa.Float(), nullable=True),
    sa.Column('repurchase_of_capital_stock', sa.Float(), nullable=True),
    sa.Column('research_and_development', sa.Float(), nullable=True),
    sa.Column('retained_earnings', sa.Float(), nullable=True),
    sa.Column('sale_of_investment', sa.Float(), nullable=True),
    sa.Column('selling_general_and_administration', sa.Float(), nullable=True),
    sa.Column('share_issued', sa.Float(), nullable=True),
    sa.Column('stock_based_compensation', sa.Float(), nullable=True),
    sa.Column('stockholders_equity', sa.Float(), nullable=True),
    sa.Column('tangible_book_value', sa.Float(), nullable=True),
    sa.Column('tax_effect_of_unusual_items', sa.Float(), nullable=True),
    sa.Column('tax_provision', sa.Float(), nullable=True),
    sa.Column('tax_rate_for_calcs', sa.Float(), nullable=True),
    sa.Column('total_assets', sa.Float(), nullable=True),
    sa.Column('total_capitalization', sa.Float(), nullable=True),
    sa.Column('total_debt', sa.Float(), nullable=True),
    sa.Column('total_equity_gross_minority_interest', sa.Float(), nullable=True),
    sa.Column('total_expenses', sa.Float(), nullable=True),
    sa.Column('total_liabilities_net_minority_interest', sa.Float(), nullable=True),
    sa.Column('total_non_current_assets', sa.Float(), nullable=True),
    sa.Column('total_non_current_liabilities_net_minority_interest', sa.Float(), nullable=True),
    sa.Column('total_operating_income_as_reported', sa.Float(), nullable=True),
    sa.Column('total_revenue', sa.Float(), nullable=True),
    sa.Column('total_tax_payable', sa.Float(), nullable=True),
    sa.Column('trade_and_other_payables_non_current', sa.Float(), nullable=True),
    sa.Column('treasury_shares_number', sa.Float(), nullable=True),
    sa.Column('working_capital', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('date', 'symbol')
    )
    with op.batch_alter_table('financials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_financials_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_financials_symbol'), ['symbol'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('financials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_financials_symbol'))
        batch_op.drop_index(batch_op.f('ix_financials_date'))

    op.drop_table('financials')
    with op.batch_alter_table('equity', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_equity_symbol'))
        batch_op.drop_index(batch_op.f('ix_equity_country'))

    op.drop_table('equity')
    with op.batch_alter_table('daily_ohlcv', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_ohlcv_symbol'))
        batch_op.drop_index(batch_op.f('ix_daily_ohlcv_date'))

    op.drop_table('daily_ohlcv')
    # ### end Alembic commands ###
